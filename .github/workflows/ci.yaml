name: Default Pipeline 

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main 
jobs:
  check_backend:
    name: "Check backend"
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '^1.15.0'
    - name: Test Backend
      run: cd backend && go test -v -coverprofile=backend_coverage.out ./...
    - name: Render coverage report
      run: cd backend && go tool cover -html=backend_coverage.out -o backend.html
    - uses: actions/upload-artifact@v2
      with:
        name: backend_coverage
        path: backend/backend.html
  check_frontend:
    name: "Check frontend"
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: Cache Node.js modules
      uses: actions/cache@v2
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-
          ${{ runner.OS }}-
    - run: cd frontend_new && npm install
    - run: cd frontend_new && npm test
  check_integration:
    name: "Check components integration"
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-latest, macos-11.0]
    runs-on: ${{ matrix.os }}
    needs: [check_backend, check_frontend]
    steps:
    - uses: actions/checkout@v1
    - name: Get minikube (macOS)
      if: matrix.os == 'macos-11.0'
      run: brew install minikube
    - name: Setup Minikube
      run: minikube start --addons=registry --addons=ingress
    - name: Get Skaffold (Linux)
      if: matrix.os == 'ubuntu-20.04'
      run: |
        sudo apt install -yqq curl
        curl -Lo skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64
        sudo install skaffold /usr/local/bin/
        rm -f skaffold
    - name: Get Skaffold (Windows)
      if: matrix.os == 'windows-latest'
      run: choco install skaffold
    - name: Get Skaffold (macOS)
      if: matrix.os == 'windows-latest'
      run: brew install skaffold
    - name: Build Images
      run: skaffold build --profile=dev
    - name: Deploy containers to kubernetes
      run: skaffold run --profile=dev
    - name: Chrome Selenium tests
      shell: bash
      run: |
        export BASE_URL="http://$(minikube ip)/"
        cd tests/selenium
        npm install
        BROWSER=chrome npm test
    - name: Safari Selenium tests
      shell: bash
      if: matrix.os == 'macos-11.0'
      run: |
        export BASE_URL="http://$(minikube ip)/"
        cd tests/selenium
        npm install
        BROWSER=safari npm test
    - name: Cleanup
      run: skaffold delete --profile=dev
  push_docker:
    name: "Push docker images"
    runs-on: ubuntu-latest
    needs: [check_integration]
    if: ${{ github.event_name == 'push' }}
    steps:
    - uses: actions/checkout@v1
    - name: Get Skaffold
      run: |
        sudo apt install -yqq curl
        curl -Lo skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64
        sudo install skaffold /usr/local/bin/
        rm -f skaffold
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Update Images
      run: skaffold build --profile=prod
